импорт Основное
импорт Общие::КурсыВалют

@Обработчик
метод ПослеЧтения()
    знч НачальнаяСтадия = ПолучитьНачальнуюСтадиюСделки()
    если НачальнаяСтадия != Неопределено
        Объект.Стадия = НачальнаяСтадия
    ;
    знч ВалютаУчета = ПолучитьВалютуУчета()
    если ВалютаУчета != Неопределено
        Объект.ВалютаСделки = ВалютаУчета
    ;
    знч ДанныеПользователя = ПользователиКлиентИСервер.ПолучитьДанныеТекущегоПользователя()
    если ДанныеПользователя.Сотрудник != Неопределено
        Объект.Ответственный = ДанныеПользователя.Сотрудник
    ;
;

@Обработчик
метод ПередЗаписьюОбъекта()
    пер ПоляНеЗаполнены: Булево
    если Объект.Клиент == Неопределено
        Компоненты.ПолеВводаКлиент.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
        ПоляНеЗаполнены = Истина
    иначе
        Компоненты.ПолеВводаКлиент.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    ;
    если Объект.Направление == Неопределено
        Компоненты.ПолеВводаНаправление.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
        ПоляНеЗаполнены = Истина
    иначе
        Компоненты.ПолеВводаНаправление.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    ;
    если Объект.Наименование.Пусто()
        Компоненты.ПолеВводаСодержание.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
        ПоляНеЗаполнены = Истина
    иначе
        Компоненты.ПолеВводаСодержание.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    ;
    если Объект.Стадия == Неопределено
        Компоненты.ПолеВводаСтадия.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
        ПоляНеЗаполнены = Истина
    иначе
        Компоненты.ПолеВводаСтадия.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    ;
    если Объект.ВалютаСделки == Неопределено
        Компоненты.ПолеВводаВалюта.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
        ПоляНеЗаполнены = Истина
    иначе
        Компоненты.ПолеВводаВалюта.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    ;
    если ПоляНеЗаполнены
        выбросить новый ИсключениеВалидации("Не заполнены обязательные поля", ОтображатьСообщениеОбОшибке = Ложь)
    ;
;

@Обработчик
метод ПослеЗаписиОбъекта()
    СделкаЗаписана.Оповестить(КлючОбъекта)
    
    если ПоказыватьУведомление
        знч УведомлениеОСделке = новый Уведомление(ЛокализованныеСтроки.НоваяСделка(),
                                                ЛокализованныеСтроки.УведомлениеОСозданииСделки(Объект.Код))
                                                    
        УведомлениеОСделке.ОценкаИнформации = ОценкаИнформации.Положительная
        УведомлениеОСделке.Данные = КлючОбъекта
        УведомлениеОСделке.СохранитьВЦентреУведомлений = Истина
        
        пер КомандаОткрытия = новый КомандаСПараметром<Уведомление>(
            (Команда, Уведомление) -> СделкиФормаОбъекта.ОткрытьВМодальномОкне(КлючОбъекта = Уведомление.Данные), 
            ЛокализованныеСтроки.Открыть()
        )

        пер Команды = новый ФрагментКомандногоИнтерфейса<КомандаСПараметром<Уведомление>>([КомандаОткрытия])
        УведомлениеОСделке.Команды = Команды
        
        УведомлениеОСделке.Показать()
    ;
;

метод СохранитьИОткрыть(Команда: ОбычнаяКоманда)
    ПоказыватьУведомление = Ложь
    Записать()
    Закрыть()
    СделкиФормаОбъекта.ОткрытьВМодальномОкне(КлючОбъекта = КлючОбъекта)
;

метод СоздатьКлиентаПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    знч Клиент = КлиентыФормаОбъекта.ОткрытьВМодальномОкне()
    если Клиент != Неопределено
        Объект.Клиент = Клиент
    ;
;

метод СоздатьКонтактноеЛицоПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    знч КонтактноеЛицо = КонтактныеЛицаФормаОбъекта.ОткрытьВМодальномОкне(Клиент = Объект.Клиент)
    если КонтактноеЛицо != Неопределено
        Объект.КонтактноеЛицо = КонтактноеЛицо
    ;
;

метод ПриВыбореФайлаДоговора(Источник: ВыборФайлов, Событие: СобытиеПриИзменении<ЧитаемыйМассив<ВыбранныйФайл>>)
    знч Файл = Событие.НовоеЗначение[0]
    Объект.ФайлДоговора = ЗагрузкаФайлов.НачатьЗагрузку(Файл).ПолучитьРезультат()
    Объект.ИмяФайлаДоговора = Файл.Имя
;

метод УдалитьФайлДоговораПриНажатии(Источник: Картинка, Событие: СобытиеПриНажатии)
    Объект.ФайлДоговора = Неопределено
    Объект.ИмяФайлаДоговора = ""
;

метод ИмяФайлаДоговораПриНажатии(Источник: Надпись, Событие: СобытиеПриНажатии)
    ВыгрузкаФайлов.НачатьВыгрузку(Объект.ФайлДоговора, Объект.ИмяФайлаДоговора)
;

метод ПолучитьИконкуВыбраннойСтадии(): ДвоичныйОбъект.Ссылка?
    знч Стадия = Объект.Стадия
    если Стадия != Неопределено
        возврат ПолучитьИконкуСтадии(Стадия)
    ;
    возврат Неопределено
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьИконкуСтадии(Стадия: СтадииСделок.Ссылка): ДвоичныйОбъект.Ссылка?
    возврат СтадииСделок.ПолучитьИконкуСтадии(Стадия)
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьНачальнуюСтадиюСделки(): СтадииСделок.Ссылка?
    возврат СтадииСделок.ПолучитьНачальнуюСтадию()
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьВалютуУчета(): Валюты.Ссылка?
    возврат Валюты.ПолучитьБазовуюВалюту()
;