импорт Основное
импорт Пресейл

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [ПользователиКлиентИСервер.ПолныеПраваНаСправочникДляАутентифицированных()]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<Задачи.ДанныеРасчетаРазрешений>): Соответствие<Задачи.ДанныеРасчетаРазрешений, Массив<РазрешениеДоступа>>
    знч Результат = <Задачи.ДанныеРасчетаРазрешений, Массив<РазрешениеДоступа>>{:}
    
    знч СделкиЗадач = <Сделки.Ссылка>{}
    для Элемент из Элементы
        СделкиЗадач.Добавить(Элемент.Владелец)
    ;
    
    знч РегионыСделок = Сделки.ПолучитьРегионыСделок(СделкиЗадач)
    
    для Элемент из Элементы
        знч Направление = РегионыСделок.Получить(Элемент.Владелец)
    
        знч Разрешения = <РазрешениеДоступа>[
            ПользователиКлиентИСервер.ПолныеПраваНаСправочникДляРуководителя(), 
            новый РазрешениеДоступа(
                [новый КлючДоступаМенеджера.Объект(Владелец = Направление)],
                [Сущность.Право.Создание, Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Удаление])
        ]

        Результат.Вставить(Элемент, Разрешения)
    ;

    возврат Результат
;

@ВПроекте
метод КоличествоОткрытыхЗадачСотрудника(Сотрудник: Сотрудники.Ссылка): ЧитаемоеСоответствие<СтатусМероприятия, Число>
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Статус КАК Статус,
            КОЛИЧЕСТВО(*) КАК КоличествоЗадач
        ИЗ
            Задачи
        ГДЕ
            Ответственный == %Сотрудник
            И Статус В (СтатусМероприятия.Запланировано, СтатусМероприятия.ВПроцессе)
        СГРУППИРОВАТЬ ПО
            Статус
    }
    
    знч ЗадачиПоНаправлениям = <СтатусМероприятия, Число>{
        СтатусМероприятия.Запланировано : 0,
        СтатусМероприятия.ВПроцессе : 0
    }
    
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        ЗадачиПоНаправлениям.Вставить(СтрокаРезультата.Статус, СтрокаРезультата.КоличествоЗадач)
    ;
    
    возврат ЗадачиПоНаправлениям
;

@ВПодсистеме
метод ПолучитьЗадачиСотрудника(Сотрудник: Сотрудники.Ссылка): ЧитаемыйМассив<Задачи.Ссылка>
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Ссылка
        ИЗ
            Задачи КАК Задачи
        ГДЕ
            Ответственный == %Сотрудник
    }
    
    знч РезультатЗапроса = Запрос.Выполнить()
    знч ЗадачиСотрудника = <Задачи.Ссылка>[]
    для СтрокаРезультата из РезультатЗапроса
        ЗадачиСотрудника.Добавить(СтрокаРезультата.Ссылка)
    ;
    возврат ЗадачиСотрудника
;
